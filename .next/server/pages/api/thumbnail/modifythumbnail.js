"use strict";(()=>{var e={};e.id=842,e.ids=[842],e.modules={8013:e=>{e.exports=require("mongodb")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},2500:(e,t,n)=>{n.r(t),n.d(t,{config:()=>c,default:()=>u,routeModule:()=>d});var a={};n.r(a),n.d(a,{default:()=>l});var o=n(1802),s=n(7153),i=n(6249),r=n(1004);let l=async function(e,t){if("DELETE"===e.method)try{let e=(await (0,r.v)()).db().collection("Thumbnail"),n=await e.countDocuments();if(0===n)return t.status(200).json({message:"No thumbnail is available to delete"});let a=await e.deleteMany({});t.status(200).json({message:`Successfully deleted ${a.deletedCount} Thumbnail`,deletedCount:a.deletedCount})}catch(e){t.status(500).json({message:"Internal Server Error: Unable to delete thumbnail picture"})}else if("POST"===e.method){let{ThumbnailImage:n}=e.body;if(!n)return t.status(200).json({message:"Please Upload a thumbnail image."});let a=await (0,r.v)();if(a){let e=a.db().collection("Thumbnail");if(1===await e.countDocuments())return t.status(200).json({message:"Please delete previous thumbnail first to upload a new one."});if(await e.findOne({ThumbnailImage:n})){t.status(422).json({message:"This thumbnail already exists."});return}await e.insertOne({ThumbnailImage:n}),t.status(201).json({message:"Thumbnail Updated!"})}else console.error("Failed to connect to the database")}else if("GET"!==e.method)return;else try{let e=(await (0,r.v)()).db().collection("Thumbnail"),n=await e.countDocuments();if(0===n)return t.status(200).json({message:"no thumbnail is available"});let a=await e.find({},{projection:{_id:0}}).toArray();t.status(200).json(a)}catch(e){console.error("Error:",e),t.status(500).json({message:"Internal Server Error: Unable to get music"})}},u=(0,i.l)(a,"default"),c=(0,i.l)(a,"config"),d=new o.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/thumbnail/modifythumbnail",pathname:"/api/thumbnail/modifythumbnail",bundlePath:"",filename:""},userland:a})},1004:(e,t,n)=>{n.d(t,{v:()=>s});var a=n(8013);let{ObjectId:o}=n(8013);async function s(){let e;try{return e=new a.MongoClient("mongodb+srv://ghufran:Allahis1@cluster0.psik2ae.mongodb.net/deployedplanet?retryWrites=true&w=majority",{connectTimeoutMS:6e5,serverSelectionTimeoutMS:6e4}),console.log("Connecting to MongoDB Atlas cluster..."),await e.connect(),console.log("Successfully connected to MongoDB Atlas!"),e}catch(e){console.error("Connection to MongoDB Atlas failed!",e),process.exit()}}},7153:(e,t)=>{var n;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return n}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(n||(n={}))},1802:(e,t,n)=>{e.exports=n(145)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var n=t(t.s=2500);module.exports=n})();